Terminals unused in grammar

    CHAR


Grammar

    0 $accept: top $end

    1 top: name
    2    | bool
    3    | list
    4    | '+' top top
    5    | '-' top top
    6    | '*' top top
    7    | '/' top top
    8    | '(' top ')'
    9    | lambda
   10    | macro
   11    | if
   12    | NUM
   13    | variable
   14    | application

   15 macro: DEF ' ' '(' variable ')' ' ' '(' top ')'
   16      | DEF ' ' '(' variable variable ')' '(' top ')'

   17 application: '(' top ' ' top ')'

   18 lambda: LAMBDA '(' variable ')' '(' top ')'

   19 name: '"' STR '"'

   20 bool: '#' 't'
   21     | '#' 'f'

   22 list: '\'' '(' ')'
   23     | '\'' '(' top ' ' list ')'

   24 if: '(' "if " '(' top ')' ' ' '(' top ')' ' ' '(' top ')'

   25 variable: STR


Terminals, with rules where they appear

    $end (0) 0
    ' ' (32) 15 16 17 23 24
    '"' (34) 19
    '#' (35) 20 21
    '\'' (39) 22 23
    '(' (40) 8 15 16 17 18 22 23 24
    ')' (41) 8 15 16 17 18 22 23 24
    '*' (42) 6
    '+' (43) 4
    '-' (45) 5
    '/' (47) 7
    'f' (102) 21
    't' (116) 20
    error (256)
    NUM <digit> (258) 12
    CHAR <character> (259)
    STR <name> (260) 19 25
    DEF <name> (261) 15 16
    LAMBDA (262) 18
    "if " (263) 24


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    top <node> (22)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14
        on right: 0 4 5 6 7 8 15 16 17 18 23 24
    macro <node> (23)
        on left: 15 16
        on right: 10
    application <node> (24)
        on left: 17
        on right: 14
    lambda <node> (25)
        on left: 18
        on right: 9
    name <node> (26)
        on left: 19
        on right: 1
    bool <node> (27)
        on left: 20 21
        on right: 2
    list <node> (28)
        on left: 22 23
        on right: 3 23
    if <node> (29)
        on left: 24
        on right: 11
    variable <node> (30)
        on left: 25
        on right: 13 15 16 18


State 0

    0 $accept: . top $end

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 13
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 1

   12 top: NUM .

    $default  reduce using rule 12 (top)


State 2

   25 variable: STR .

    $default  reduce using rule 25 (variable)


State 3

   15 macro: DEF . ' ' '(' variable ')' ' ' '(' top ')'
   16      | DEF . ' ' '(' variable variable ')' '(' top ')'

    ' '  shift, and go to state 22


State 4

   18 lambda: LAMBDA . '(' variable ')' '(' top ')'

    '('  shift, and go to state 23


State 5

    4 top: '+' . top top

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 24
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 6

    5 top: '-' . top top

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 25
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 7

    6 top: '*' . top top

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 26
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 8

    7 top: '/' . top top

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 27
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 9

    8 top: '(' . top ')'
   17 application: '(' . top ' ' top ')'
   24 if: '(' . "if " '(' top ')' ' ' '(' top ')' ' ' '(' top ')'

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12
    "if "   shift, and go to state 28

    top          go to state 29
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 10

   19 name: '"' . STR '"'

    STR  shift, and go to state 30


State 11

   20 bool: '#' . 't'
   21     | '#' . 'f'

    't'  shift, and go to state 31
    'f'  shift, and go to state 32


State 12

   22 list: '\'' . '(' ')'
   23     | '\'' . '(' top ' ' list ')'

    '('  shift, and go to state 33


State 13

    0 $accept: top . $end

    $end  shift, and go to state 34


State 14

   10 top: macro .

    $default  reduce using rule 10 (top)


State 15

   14 top: application .

    $default  reduce using rule 14 (top)


State 16

    9 top: lambda .

    $default  reduce using rule 9 (top)


State 17

    1 top: name .

    $default  reduce using rule 1 (top)


State 18

    2 top: bool .

    $default  reduce using rule 2 (top)


State 19

    3 top: list .

    $default  reduce using rule 3 (top)


State 20

   11 top: if .

    $default  reduce using rule 11 (top)


State 21

   13 top: variable .

    $default  reduce using rule 13 (top)


State 22

   15 macro: DEF ' ' . '(' variable ')' ' ' '(' top ')'
   16      | DEF ' ' . '(' variable variable ')' '(' top ')'

    '('  shift, and go to state 35


State 23

   18 lambda: LAMBDA '(' . variable ')' '(' top ')'

    STR  shift, and go to state 2

    variable  go to state 36


State 24

    4 top: '+' top . top

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 37
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 25

    5 top: '-' top . top

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 38
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 26

    6 top: '*' top . top

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 39
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 27

    7 top: '/' top . top

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 40
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 28

   24 if: '(' "if " . '(' top ')' ' ' '(' top ')' ' ' '(' top ')'

    '('  shift, and go to state 41


State 29

    8 top: '(' top . ')'
   17 application: '(' top . ' ' top ')'

    ')'  shift, and go to state 42
    ' '  shift, and go to state 43


State 30

   19 name: '"' STR . '"'

    '"'  shift, and go to state 44


State 31

   20 bool: '#' 't' .

    $default  reduce using rule 20 (bool)


State 32

   21 bool: '#' 'f' .

    $default  reduce using rule 21 (bool)


State 33

   22 list: '\'' '(' . ')'
   23     | '\'' '(' . top ' ' list ')'

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    ')'     shift, and go to state 45
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 46
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 34

    0 $accept: top $end .

    $default  accept


State 35

   15 macro: DEF ' ' '(' . variable ')' ' ' '(' top ')'
   16      | DEF ' ' '(' . variable variable ')' '(' top ')'

    STR  shift, and go to state 2

    variable  go to state 47


State 36

   18 lambda: LAMBDA '(' variable . ')' '(' top ')'

    ')'  shift, and go to state 48


State 37

    4 top: '+' top top .

    $default  reduce using rule 4 (top)


State 38

    5 top: '-' top top .

    $default  reduce using rule 5 (top)


State 39

    6 top: '*' top top .

    $default  reduce using rule 6 (top)


State 40

    7 top: '/' top top .

    $default  reduce using rule 7 (top)


State 41

   24 if: '(' "if " '(' . top ')' ' ' '(' top ')' ' ' '(' top ')'

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 49
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 42

    8 top: '(' top ')' .

    $default  reduce using rule 8 (top)


State 43

   17 application: '(' top ' ' . top ')'

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 50
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 44

   19 name: '"' STR '"' .

    $default  reduce using rule 19 (name)


State 45

   22 list: '\'' '(' ')' .

    $default  reduce using rule 22 (list)


State 46

   23 list: '\'' '(' top . ' ' list ')'

    ' '  shift, and go to state 51


State 47

   15 macro: DEF ' ' '(' variable . ')' ' ' '(' top ')'
   16      | DEF ' ' '(' variable . variable ')' '(' top ')'

    STR  shift, and go to state 2
    ')'  shift, and go to state 52

    variable  go to state 53


State 48

   18 lambda: LAMBDA '(' variable ')' . '(' top ')'

    '('  shift, and go to state 54


State 49

   24 if: '(' "if " '(' top . ')' ' ' '(' top ')' ' ' '(' top ')'

    ')'  shift, and go to state 55


State 50

   17 application: '(' top ' ' top . ')'

    ')'  shift, and go to state 56


State 51

   23 list: '\'' '(' top ' ' . list ')'

    '\''  shift, and go to state 12

    list  go to state 57


State 52

   15 macro: DEF ' ' '(' variable ')' . ' ' '(' top ')'

    ' '  shift, and go to state 58


State 53

   16 macro: DEF ' ' '(' variable variable . ')' '(' top ')'

    ')'  shift, and go to state 59


State 54

   18 lambda: LAMBDA '(' variable ')' '(' . top ')'

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 60
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 55

   24 if: '(' "if " '(' top ')' . ' ' '(' top ')' ' ' '(' top ')'

    ' '  shift, and go to state 61


State 56

   17 application: '(' top ' ' top ')' .

    $default  reduce using rule 17 (application)


State 57

   23 list: '\'' '(' top ' ' list . ')'

    ')'  shift, and go to state 62


State 58

   15 macro: DEF ' ' '(' variable ')' ' ' . '(' top ')'

    '('  shift, and go to state 63


State 59

   16 macro: DEF ' ' '(' variable variable ')' . '(' top ')'

    '('  shift, and go to state 64


State 60

   18 lambda: LAMBDA '(' variable ')' '(' top . ')'

    ')'  shift, and go to state 65


State 61

   24 if: '(' "if " '(' top ')' ' ' . '(' top ')' ' ' '(' top ')'

    '('  shift, and go to state 66


State 62

   23 list: '\'' '(' top ' ' list ')' .

    $default  reduce using rule 23 (list)


State 63

   15 macro: DEF ' ' '(' variable ')' ' ' '(' . top ')'

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 67
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 64

   16 macro: DEF ' ' '(' variable variable ')' '(' . top ')'

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 68
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 65

   18 lambda: LAMBDA '(' variable ')' '(' top ')' .

    $default  reduce using rule 18 (lambda)


State 66

   24 if: '(' "if " '(' top ')' ' ' '(' . top ')' ' ' '(' top ')'

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 69
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 67

   15 macro: DEF ' ' '(' variable ')' ' ' '(' top . ')'

    ')'  shift, and go to state 70


State 68

   16 macro: DEF ' ' '(' variable variable ')' '(' top . ')'

    ')'  shift, and go to state 71


State 69

   24 if: '(' "if " '(' top ')' ' ' '(' top . ')' ' ' '(' top ')'

    ')'  shift, and go to state 72


State 70

   15 macro: DEF ' ' '(' variable ')' ' ' '(' top ')' .

    $default  reduce using rule 15 (macro)


State 71

   16 macro: DEF ' ' '(' variable variable ')' '(' top ')' .

    $default  reduce using rule 16 (macro)


State 72

   24 if: '(' "if " '(' top ')' ' ' '(' top ')' . ' ' '(' top ')'

    ' '  shift, and go to state 73


State 73

   24 if: '(' "if " '(' top ')' ' ' '(' top ')' ' ' . '(' top ')'

    '('  shift, and go to state 74


State 74

   24 if: '(' "if " '(' top ')' ' ' '(' top ')' ' ' '(' . top ')'

    NUM     shift, and go to state 1
    STR     shift, and go to state 2
    DEF     shift, and go to state 3
    LAMBDA  shift, and go to state 4
    '+'     shift, and go to state 5
    '-'     shift, and go to state 6
    '*'     shift, and go to state 7
    '/'     shift, and go to state 8
    '('     shift, and go to state 9
    '"'     shift, and go to state 10
    '#'     shift, and go to state 11
    '\''    shift, and go to state 12

    top          go to state 75
    macro        go to state 14
    application  go to state 15
    lambda       go to state 16
    name         go to state 17
    bool         go to state 18
    list         go to state 19
    if           go to state 20
    variable     go to state 21


State 75

   24 if: '(' "if " '(' top ')' ' ' '(' top ')' ' ' '(' top . ')'

    ')'  shift, and go to state 76


State 76

   24 if: '(' "if " '(' top ')' ' ' '(' top ')' ' ' '(' top ')' .

    $default  reduce using rule 24 (if)
