Terminals unused in grammar

    CHAR
    SPACE


Grammar

    0 $accept: startProduction $end

    1 startProduction: top_seq NEWLINE

    2 top_seq: top_seq NEWLINE top_seq
    3        | top

    4 top: name
    5    | bool
    6    | LISTL list
    7    | ADD top top
    8    | SUB top top
    9    | MUL top top
   10    | DIV top top
   11    | LPAREN top LISTR
   12    | lambda
   13    | macro
   14    | if
   15    | NUM
   16    | variable
   17    | application

   18 macro: LPAREN DEF LPAREN variable LISTR LPAREN top LISTR LISTR
   19      | DEF variable top

   20 application: LPAREN top top LISTR

   21 lambda: LAMBDA variable top

   22 name: STR

   23 bool: BOOL

   24 list: LPAREN LISTR
   25     | LPAREN top list LISTR

   26 if: IF LISTL top LISTR LPAREN top LISTR LPAREN top LISTR

   27 variable: VAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <digit> (258) 15
    BOOL <digit> (259) 23
    CHAR <character> (260)
    STR <name> (261) 22
    VAR <name> (262) 27
    LAMBDA (263) 21
    ADD (264) 7
    SUB (265) 8
    MUL (266) 9
    DIV (267) 10
    IF (268) 26
    LISTL (269) 6 26
    LISTR (270) 11 18 20 24 25 26
    LPAREN (271) 11 18 20 24 25 26
    SPACE (272)
    DEF (273) 18 19
    NEWLINE (274) 1 2


Nonterminals, with rules where they appear

    $accept (20)
        on left: 0
    startProduction (21)
        on left: 1
        on right: 0
    top_seq <astNode> (22)
        on left: 2 3
        on right: 1 2
    top <astNode> (23)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17
        on right: 3 7 8 9 10 11 18 19 20 21 25 26
    macro <astNode> (24)
        on left: 18 19
        on right: 13
    application <astNode> (25)
        on left: 20
        on right: 17
    lambda <astNode> (26)
        on left: 21
        on right: 12
    name <astNode> (27)
        on left: 22
        on right: 4
    bool <astNode> (28)
        on left: 23
        on right: 5
    list <astNode> (29)
        on left: 24 25
        on right: 6 25
    if <astNode> (30)
        on left: 26
        on right: 14
    variable <astNode> (31)
        on left: 27
        on right: 16 18 19 21


State 0

    0 $accept: . startProduction $end

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    startProduction  go to state 14
    top_seq          go to state 15
    top              go to state 16
    macro            go to state 17
    application      go to state 18
    lambda           go to state 19
    name             go to state 20
    bool             go to state 21
    if               go to state 22
    variable         go to state 23


State 1

   15 top: NUM .

    $default  reduce using rule 15 (top)


State 2

   23 bool: BOOL .

    $default  reduce using rule 23 (bool)


State 3

   22 name: STR .

    $default  reduce using rule 22 (name)


State 4

   27 variable: VAR .

    $default  reduce using rule 27 (variable)


State 5

   21 lambda: LAMBDA . variable top

    VAR  shift, and go to state 4

    variable  go to state 24


State 6

    7 top: ADD . top top

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 25
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 7

    8 top: SUB . top top

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 26
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 8

    9 top: MUL . top top

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 27
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 9

   10 top: DIV . top top

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 28
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 10

   26 if: IF . LISTL top LISTR LPAREN top LISTR LPAREN top LISTR

    LISTL  shift, and go to state 29


State 11

    6 top: LISTL . list

    LPAREN  shift, and go to state 30

    list  go to state 31


State 12

   11 top: LPAREN . top LISTR
   18 macro: LPAREN . DEF LPAREN variable LISTR LPAREN top LISTR LISTR
   20 application: LPAREN . top top LISTR

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 32

    top          go to state 33
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 13

   19 macro: DEF . variable top

    VAR  shift, and go to state 4

    variable  go to state 34


State 14

    0 $accept: startProduction . $end

    $end  shift, and go to state 35


State 15

    1 startProduction: top_seq . NEWLINE
    2 top_seq: top_seq . NEWLINE top_seq

    NEWLINE  shift, and go to state 36


State 16

    3 top_seq: top .

    $default  reduce using rule 3 (top_seq)


State 17

   13 top: macro .

    $default  reduce using rule 13 (top)


State 18

   17 top: application .

    $default  reduce using rule 17 (top)


State 19

   12 top: lambda .

    $default  reduce using rule 12 (top)


State 20

    4 top: name .

    $default  reduce using rule 4 (top)


State 21

    5 top: bool .

    $default  reduce using rule 5 (top)


State 22

   14 top: if .

    $default  reduce using rule 14 (top)


State 23

   16 top: variable .

    $default  reduce using rule 16 (top)


State 24

   21 lambda: LAMBDA variable . top

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 37
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 25

    7 top: ADD top . top

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 38
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 26

    8 top: SUB top . top

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 39
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 27

    9 top: MUL top . top

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 40
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 28

   10 top: DIV top . top

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 41
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 29

   26 if: IF LISTL . top LISTR LPAREN top LISTR LPAREN top LISTR

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 42
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 30

   24 list: LPAREN . LISTR
   25     | LPAREN . top list LISTR

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LISTR   shift, and go to state 43
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 44
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 31

    6 top: LISTL list .

    $default  reduce using rule 6 (top)


State 32

   18 macro: LPAREN DEF . LPAREN variable LISTR LPAREN top LISTR LISTR
   19      | DEF . variable top

    VAR     shift, and go to state 4
    LPAREN  shift, and go to state 45

    variable  go to state 34


State 33

   11 top: LPAREN top . LISTR
   20 application: LPAREN top . top LISTR

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LISTR   shift, and go to state 46
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 47
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 34

   19 macro: DEF variable . top

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 48
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 35

    0 $accept: startProduction $end .

    $default  accept


State 36

    1 startProduction: top_seq NEWLINE .
    2 top_seq: top_seq NEWLINE . top_seq

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    $default  reduce using rule 1 (startProduction)

    top_seq      go to state 49
    top          go to state 16
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 37

   21 lambda: LAMBDA variable top .

    $default  reduce using rule 21 (lambda)


State 38

    7 top: ADD top top .

    $default  reduce using rule 7 (top)


State 39

    8 top: SUB top top .

    $default  reduce using rule 8 (top)


State 40

    9 top: MUL top top .

    $default  reduce using rule 9 (top)


State 41

   10 top: DIV top top .

    $default  reduce using rule 10 (top)


State 42

   26 if: IF LISTL top . LISTR LPAREN top LISTR LPAREN top LISTR

    LISTR  shift, and go to state 50


State 43

   24 list: LPAREN LISTR .

    $default  reduce using rule 24 (list)


State 44

   25 list: LPAREN top . list LISTR

    LPAREN  shift, and go to state 30

    list  go to state 51


State 45

   18 macro: LPAREN DEF LPAREN . variable LISTR LPAREN top LISTR LISTR

    VAR  shift, and go to state 4

    variable  go to state 52


State 46

   11 top: LPAREN top LISTR .

    $default  reduce using rule 11 (top)


State 47

   20 application: LPAREN top top . LISTR

    LISTR  shift, and go to state 53


State 48

   19 macro: DEF variable top .

    $default  reduce using rule 19 (macro)


State 49

    2 top_seq: top_seq . NEWLINE top_seq
    2        | top_seq NEWLINE top_seq .

    $default  reduce using rule 2 (top_seq)


State 50

   26 if: IF LISTL top LISTR . LPAREN top LISTR LPAREN top LISTR

    LPAREN  shift, and go to state 54


State 51

   25 list: LPAREN top list . LISTR

    LISTR  shift, and go to state 55


State 52

   18 macro: LPAREN DEF LPAREN variable . LISTR LPAREN top LISTR LISTR

    LISTR  shift, and go to state 56


State 53

   20 application: LPAREN top top LISTR .

    $default  reduce using rule 20 (application)


State 54

   26 if: IF LISTL top LISTR LPAREN . top LISTR LPAREN top LISTR

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 57
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 55

   25 list: LPAREN top list LISTR .

    $default  reduce using rule 25 (list)


State 56

   18 macro: LPAREN DEF LPAREN variable LISTR . LPAREN top LISTR LISTR

    LPAREN  shift, and go to state 58


State 57

   26 if: IF LISTL top LISTR LPAREN top . LISTR LPAREN top LISTR

    LISTR  shift, and go to state 59


State 58

   18 macro: LPAREN DEF LPAREN variable LISTR LPAREN . top LISTR LISTR

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 60
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 59

   26 if: IF LISTL top LISTR LPAREN top LISTR . LPAREN top LISTR

    LPAREN  shift, and go to state 61


State 60

   18 macro: LPAREN DEF LPAREN variable LISTR LPAREN top . LISTR LISTR

    LISTR  shift, and go to state 62


State 61

   26 if: IF LISTL top LISTR LPAREN top LISTR LPAREN . top LISTR

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STR     shift, and go to state 3
    VAR     shift, and go to state 4
    LAMBDA  shift, and go to state 5
    ADD     shift, and go to state 6
    SUB     shift, and go to state 7
    MUL     shift, and go to state 8
    DIV     shift, and go to state 9
    IF      shift, and go to state 10
    LISTL   shift, and go to state 11
    LPAREN  shift, and go to state 12
    DEF     shift, and go to state 13

    top          go to state 63
    macro        go to state 17
    application  go to state 18
    lambda       go to state 19
    name         go to state 20
    bool         go to state 21
    if           go to state 22
    variable     go to state 23


State 62

   18 macro: LPAREN DEF LPAREN variable LISTR LPAREN top LISTR . LISTR

    LISTR  shift, and go to state 64


State 63

   26 if: IF LISTL top LISTR LPAREN top LISTR LPAREN top . LISTR

    LISTR  shift, and go to state 65


State 64

   18 macro: LPAREN DEF LPAREN variable LISTR LPAREN top LISTR LISTR .

    $default  reduce using rule 18 (macro)


State 65

   26 if: IF LISTL top LISTR LPAREN top LISTR LPAREN top LISTR .

    $default  reduce using rule 26 (if)
